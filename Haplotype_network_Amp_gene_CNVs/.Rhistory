ggplot(ftlevels,aes(Age_group,Lower,color=Sex))+geom_point()+theme_bw()
ggplot(ftlevels,aes(Age_group,Lower,color=Sex))+geom_point()+theme_bw()+theme(axis.text.x = element_text(angle=90))
library(reshape2)
ggplot()+geom_errorbar(data=ftlevels,aes(Age_group,Lower,Upper,color=Sex))+geom_point()+theme_bw()+theme(axis.text.x = element_text(angle=90))
ggplot()+geom_errorbar(data=ftlevels,aes(Age_group,ymin=Lower,ymax=Upper,color=Sex))+geom_point()+theme_bw()+theme(axis.text.x = element_text(angle=90))
dat<-read.table(pipe('pbpaste'),sep="\t",header=F)
dat<-read.table(pipe('pbpaste'),sep=" ",header=F)
View(dat)
library(ggplot2)
colnames(dat)
ggplot(dat[which(dat$V3==1),],aes(V1,V2))+geom_point()
ggplot(dat[which(dat$V3==1),],aes(V1,V2))+geom_point()+stat_smooth(method="lm")
ggplot(dat[which(dat$V3==0),],aes(V1,V2))+geom_point()+stat_smooth(method="lm")
ggplot(dat,aes(V1,V2))+geom_point()+stat_smooth(method="lm")
table(dat$V3)
colnames(dat)
colnames(dat)[3]
colnames(dat)[3]<-"idealism"
l1<-lm(dat[which(dat$idealism==1),],V1~V2)
l1<-lm(daya=dat[which(dat$idealism==1),],V1~V2)
l1<-lm(data=dat[which(dat$idealism==1),],V1~V2)
l1
l0<-lm(data=dat[which(dat$idealism==0),],V1~V2)
l1
l0
summary(l1)
summary(l0)
aov(l0)
?ss
24.0554/91
24.0554/90
seq(1,:10)
seq(1:10)
sample(seq(1:10),2,replace=F)
sample(seq(1:10),2,replace=F)
?choose
choose(10,2)
choose(7,2)
lchoose()
lchoose(7,2)
combn(seq(1:10))
combn(seq(1:10),2)
m<-matrix(NA,21,2)
peeps<-c("sam","sarah","marta","monika","barbara","kate","bruce")
for(i in 1:21){
pair1<-sample(peeps,2,replace=F)
peeps<-peeps[-which(peeps%in%pair1)]
m[i,]<-pair1
}
i
choose(7,2)
m<-matrix(NA,21,2)
peeps<-c("sam","sarah","marta","monika","barbara","kate","bruce","arslan")
for(i in 1:4){
pair1<-sample(peeps,2,replace=F)
peeps<-peeps[-which(peeps%in%pair1)]
m[i,]<-pair1
}
m<-matrix(NA,4,2)
peeps<-c("sam","sarah","marta","monika","barbara","kate","bruce","arslan")
for(i in 1:4){
pair1<-sample(peeps,2,replace=F)
peeps<-peeps[-which(peeps%in%pair1)]
m[i,]<-pair1
}
View(m)
?message
setwd("~/Documents/PhD_files/MHC_analyses/Masculinity_calculations")
setwd("~/Documents/PhD_files/MHC_analyses/Masculinity_calculations")
symshape<-as.matrix(read.table('SymShape.txt'))
dim(symshape)
symshape<-as.matrix(read.table('symql_nosize_11202017.txt'))
symid<-read.table('symid_nosize_11202017.txttxt')
symid<-read.table('symid_nosize_11202017.txt')
head(symid)
View(symid)
rm(symid)
symid<-read.table('symql_id_12052017.txt.txt',header=F)
View(symid)
dim(symshape)
View(symshape)
symshape<-as.matrix(read.table('symql_nosize_11202017.txt'))
symshape<-as.matrix(read.table('symql_nosize_11202017.txt'),sep=",")
dim(symshape)
head(symshape[,1])
symshape<-as.matrix(read.table('symql_nosize_11202017.txt',sep=","))
head(symid)
library(ggplot2)
library(plyr)
library(smatr)
library(reshape2)
region<-function(x,y){
#x is the vector of indices for the region that we want to extract and y is complete ql file.
#dim of x are 1 x length(x)
#dim of y are ql x ind
x1<-as.matrix(x)
x2<-3*x1-2
x3<-rbind(x2,x2+1,x2+2)
x4<-as.vector(x3)
y1<-y[,x4]
return(y1)
}
cal.centroid<-function(x){
#use teurosym - where rows are individuals and columns are QLs
indices<-seq(1,7150,1)
x1<-3*indices - 2
y1<-x1+1
z1<-x1+2
x2<-x[,x1]
y2<-x[,y1]
z2<-x[,z1]
#calculate mean of x coordinates across landmarks
x2.mean<-apply(x2,1,mean)
y2.mean<-apply(y2,1,mean)
z2.mean<-apply(z2,1,mean)
x3<-apply(x2,2,function(y){(y-x2.mean)^2})
y3<-apply(y2,2,function(y){(y-y2.mean)^2})
z3<-apply(z2,2,function(y){(y-z2.mean)^2})
overall<-sqrt(x3+y3+z3)
overall<-apply(overall,1,mean)
return(overall)
}
f.ql.masc<-function(x){
#use teurosym - where rows are individuals and columns are QLs
masc<-matrix(NA,nrow(x),7150)
x<-as.matrix(x)
for(i in 1:7150){
for(j in 1:nrow(x)){
x2<-region(i,x)
target<-x2[j,]
ref<-x2[-j,]
ind.male<-setdiff(which(eurofam$Sex2==2),j)
ind.female<-setdiff(which(eurofam$Sex2==1),j)
males<-x2[ind.male,]
females<-x2[ind.female,]
cons.male<-apply(males,2,mean)
cons.female<-apply(females,2,mean)
cons.diff<-cons.male-cons.female
result<-unlist(proj.vec(target,cons.diff))
masc[j,i]<-result[2]
}
print(i)
}
return(masc)
}
sexes<-read.table(pipe('pbpaste'),sep="\t",header=T)
head(sexes)
sexes<-read.table(pipe('pbpaste'),sep="\t",header=F)
head(sexes)
index
index<-which(symid$V1%in%sexes$V1)
which(duplicated(index))
which(duplicated(index)=="TRUE")
sym2<-symshape[,index]
dim(symshape)
dim(sym2)
symid2<-symid[index,]
symid2<-as.character(symid[index,])
symid2<-data.frame(IID=as.character(symid[index,])
symid2<-data.frame(IID=as.character(symid[index,]))
head(sexes)
colnames(sexes)
colnames(sexes)<-c("IID","Sex")
library(reshape2)
library(plyr)
symid2<-join(symid2,sexes,by="IID")
View(symid2)
masc<-f.ql.masc(t(sym2))
f.ql.masc<-function(x){
#use teurosym - where rows are individuals and columns are QLs
masc<-matrix(NA,nrow(x),7150)
x<-as.matrix(x)
for(i in 1:7150){
for(j in 1:nrow(x)){
x2<-region(i,x)
target<-x2[j,]
ref<-x2[-j,]
ind.male<-setdiff(which(symid2$Sex==-1),j)
ind.female<-setdiff(which(symid2$Sex==1),j)
males<-x2[ind.male,]
females<-x2[ind.female,]
cons.male<-apply(males,2,mean)
cons.female<-apply(females,2,mean)
cons.diff<-cons.male-cons.female
result<-unlist(proj.vec(target,cons.diff))
masc[j,i]<-result[2]
}
print(i)
}
return(masc)
}
masc<-f.ql.masc(t(sym2))
x2
qlmasc<-f.ql.masc(t(sym2))
nrow(t(sym2))
length(which(duplicated(symid2$IID)))
symid2<-data.frame(IID=as.character(symid[index,]))
length(which(duplicated(sexes$IID)))
sexes<-sexes[which(duplicated(sexes$IID)=="FALSE"),]
index<-which(symid$V1%in%sexes$V1)
index<-which(symid$V1%in%sexes$IID)
index<-which(duplicated(symid$V1)=="FALSE" & symid$V1%in%sexes$IID)
sym2<-symshape[,index]
symid2<-data.frame(IID=as.character(symid[index,]))
dim(sym2)
symid2<-join(symid2,sexes,by="IID")
View(symid2)
qlmasc<-f.ql.masc(t(sym2))
proj.vec<-function(x,y){
angle<-(x%*%y)/(euclid(x)*euclid(y))
angle<-pmin(pmax(angle,-1.0),1.0)
angle<-acos(angle)
emag<-euclid(x)*cos(angle)
return(c(angle,emag))
}
qlmasc<-f.ql.masc(t(sym2))
euclid<-function(x){sqrt(sum(x^2))}
qlmasc<-f.ql.masc(t(sym2))
qlmasc<-f.ql.masc(t(sym2))
x<-t(sym2)
rm(x)
gc
gc()
gc()
gc()
masc<-matrix(NA,nrow(sym2),7150)
dim(masc)
masc<-matrix(NA,nrow(t(sym2)),7150)
dim(masc)
x<-t(sym2)
for(i in 1:7150){
for(j in 1:nrow(x)){
x2<-region(i,x)
target<-x2[j,]
ref<-x2[-j,]
ind.male<-setdiff(which(symid2$Sex==-1),j)
ind.female<-setdiff(which(symid2$Sex==1),j)
males<-x2[ind.male,]
females<-x2[ind.female,]
cons.male<-apply(males,2,mean)
cons.female<-apply(females,2,mean)
cons.diff<-cons.male-cons.female
result<-unlist(proj.vec(target,cons.diff))
masc[j,i]<-result[2]
}
print(i)
}
head(masc[,c(1:4)])
head(masc[,c(1:10)])
head(masc[,c(1:4)])
head(masc[,c(1:4)],n=10)
head(masc[,c(1:4)],n=11)
head(masc[,c(1:4)],n=12)
head(masc[,c(1:4)],n=13)
masc[c(1:100),c(1:4)]
masc[c(1:100),c(1:100)]
for(i in 10:7150){
for(j in 1:nrow(x)){
x2<-region(i,x)
target<-x2[j,]
ref<-x2[-j,]
ind.male<-setdiff(which(symid2$Sex==-1),j)
ind.female<-setdiff(which(symid2$Sex==1),j)
males<-x2[ind.male,]
females<-x2[ind.female,]
cons.male<-apply(males,2,mean)
cons.female<-apply(females,2,mean)
cons.diff<-cons.male-cons.female
result<-unlist(proj.vec(target,cons.diff))
masc[j,i]<-result[2]
}
print(i)
}
nose<-read.table(pipe('pbpaste'),sep="\t",header=T)
View(nose)
index<-which(symid$V1%in%nose$IID)
symid2<-data.frame(IID=as.character(symid[index,]))
sym2<-symshape[,index]
dim(sym2)
rm(males)
rm(femalesrm(x))
rm(females,x)
rm(x2)
rm(ref)
rm(masc)
rm(cons.diff)
rm(cons.male)
rm(cons.female)
rm(ind.female)
rm(ind.male)
rm(result)
rm(target)
rm(j)
gc()
gc()
gc()
gc()
ampid<-read.table
ampid<-read.table(pipe('pbpaste'),sep="\t",heaer=T)
ampid<-read.table(pipe('pbpaste'),sep="\t",header=T)
View(ampid)
length(which(symid2$IID%in%ampid))
qlmasc<-f.ql.masc(t(sym2))
dim(sym2)
y<-t(sym2)
dim(y)
View(symid2)
View(nose)
symid2<-join(symid2,nose,by="IID")
View(symid2)
males<-y[which(symid2$Sex=="Male"),]
females<-y[which(symid2$Sex=="Female"),]
dim(males)
dim(females)
cons.male<-apply(males,2,mean)
cons.female<-apply(females,2,mean)
cons.diff<-cons.male-cons.female
dim(region(1,sym2))
dim(region(1,t(sym2)))
ampindex<-symid[which(symid$IID%in%ampid$IID),]
ampindex<-data.frame(IID=as.character(symid[which(symid$IID%in%ampid$IID),]))
View(ampid)
View(symid)
ampindex<-data.frame(IID=as.character(symid[which(symid$V1%in%ampid$IID),]))
View(ampindex)
ampindex<-which(symid$V1%in%ampid$IID)
sym.amp<-sym[,ampindex]
dim(sym2)
dim(symshape)
sym.amp<-symshape[,ampindex]
dim(sym.amp)
symid.amp<-symid[ampindex,]
symid.amp<-data.frame(IID=as.character(symid[ampindex,]))
View(symid.amp)
region(cons.diff,1)
region(1,cons.male)
region(1,cons.female)
region(1,t(cons.female))
cons.male[c(1,2,3)]
cons.female[c(1,2,3)]
cons.female[c(4,5,6)]
region(2,t(cons.female))
dim(region(1,sym.amp))
dim(sym.amp)
dim(t(sym.amp))
dim(region(1,t(sym.amp)))
t(sym.amp)[1,]
dim(t(sym.amp))
dim(region(1,t(sym.amp)))
dim(region(1,t(sym.amp)[1,]))
dim(region(1,t(sym.amp)[,1]))
dim(region(1,t(cons.diff)))
dim(region(1,(cons.diff)))
length(region(1,t(cons.diff)))
f.ql.masc2<-function(x){
#use tsym2 - where rows are individuals and columns are QLs
masc<-matrix(NA,100,7150)
x<-as.matrix(x)
for(i in 1:7150){
x2<-region(i,t(sym.amp))
for(j in 1:100){
target<-as.matrix(x2[j,])
#ref<-x2[-j,]
#ind.male<-which(symid2$Sex=="Male")
#ind.female<-which(symid2$Sex=="Female")
#males<-x2[ind.male,]
#females<-x2[ind.female,]
#cons.male<-apply(males,2,mean)
#cons.female<-apply(females,2,mean)
#cons.diff<-cons.male-cons.female
ref.diff<-region(i,t(cons.diff))
result<-unlist(proj.vec(target,ref.diff))
masc[,i]<-result[2]
}
print(i)
}
return(masc)
}
test<-f.ql.masc2(t(sym2))
dim(test)
hist(apply(test,2,mean))
masc.sum<-data.frame(qlmasc=apply(test,1,mean),IID=ampid$IID)
View(masc.sum)
dim(test)
hist(apply(test,1,mean))
length(apply(test,1,mean))
f.ql.masc2<-function(x){
#use tsym2 - where rows are individuals and columns are QLs
masc<-matrix(NA,100,7150)
x<-as.matrix(x)
for(i in 1:7150){
x2<-region(i,t(sym.amp))
for(j in 1:100){
target<-as.matrix(x2[j,])
#ref<-x2[-j,]
#ind.male<-which(symid2$Sex=="Male")
#ind.female<-which(symid2$Sex=="Female")
#males<-x2[ind.male,]
#females<-x2[ind.female,]
#cons.male<-apply(males,2,mean)
#cons.female<-apply(females,2,mean)
#cons.diff<-cons.male-cons.female
ref.diff<-region(i,t(cons.diff))
result<-unlist(proj.vec(target,ref.diff))
masc[j,i]<-result[2]
}
print(i)
}
return(masc)
}
test<-f.ql.masc2(t(sym2))
head(test)
head(test[,c(1:4)])
hist(apply(test,1,mean))
masc.sum<-data.frame(IID=ampid$IID,qlmasc=apply(test,1,mean))
write.tabe(masc.sum,'amp_masculinity_12062017.txt',sep="\t",col.names=F,row.names=F,quote=F)
write.table(masc.sum,'amp_masculinity_12062017.txt',sep="\t",col.names=F,row.names=F,quote=F)
setwd("~/Documents/CHED_2016/Ampliconic_CNV/Haplotype_network_Amp_gene_CNVs")
dat4<-read.table('../Data_files/ddpcr_outliers_removed.txt',header=T,sep="\t")
haplos<-levels(dat4$major_haplo)
wn.diffs<-matrix(NA,1000,9)
wn.haplo<-matrix(NA,1000,1)
copy.integer<-dat4
View(dat4)
copy.integer[,c(2:10)]<-apply(copy.integer[,c(2:10)],2,round)
mcopy.number<-melt(copy.number3,id.vars = c("IID","major_haplo","order"))
View(dat4)
mcopy.number<-melt(dat4[,c(1:10,12)],id.vars = c("IID","major_haplo"))
library(reshape2)
mcopy.number<-melt(dat4[,c(1:10,12)],id.vars = c("IID","major_haplo"))
mcopy.number<-melt(dat4[,c(1:10,13)],id.vars = c("IID","major_haplo"))
colnames(mcopy.number)[c(4,5)]<-c("Gene","copy_number")
View(mcopy.number)
colnames(mcopy.number)[c(3,4)]<-c("Gene","copy_number")
View(mcopy.number)
mcopy.number$floor<-floor(mcopy.number$copy_number)+0.25
mcopy.number$ceiling<-ceiling(mcopy.number$copy_number)-0.25
mcopy.number$hairy<-NA
mcopy.number$hairy[which(mcopy.number$copy_number<mcopy.number$ceiling & mcopy.number$copy_number>mcopy.number$floor)]<-1
mcopy.number$hairy[-which(mcopy.number$copy_number<mcopy.number$ceiling & mcopy.number$copy_number>mcopy.number$floor)]<-0
View(mcopy.number)
mcopy.number$floor<-floor(mcopy.number$copy_number)+0.25
mcopy.number$ceiling<-ceiling(mcopy.number$copy_number)-0.25
mcopy.number$hairy<-NA
mcopy.number$hairy[which(mcopy.number$copy_number<mcopy.number$ceiling & mcopy.number$copy_number>mcopy.number$floor)]<-1
mcopy.number$hairy[-which(mcopy.number$copy_number<mcopy.number$ceiling & mcopy.number$copy_number>mcopy.number$floor)]<-0
rand.round<-function(x){
flip<-rbinom(1,1,0.5)
if(flip==1){y=ceiling(x)}
if(flip==0){y=floor(x)}
return(y)
}
rand.round<-function(x){
flip<-rbinom(1,1,0.5)
if(flip==1){y=ceiling(x)}
if(flip==0){y=floor(x)}
return(y)
}
rand.mat<-matrix(NA,900,100)
for(i in 1:100){
rand.mat[which(mcopy.number$hairy==1),i]<-sapply(mcopy.number[which(mcopy.number$hairy==1),'copy_number'],rand.round)
rand.mat[which(mcopy.number$hairy==0),i]<-round(mcopy.number[which(mcopy.number$hairy==0),'copy_number'])
}
rand.mat<-as.data.frame(rand.mat)
rand.mat$IID<-mcopy.number$IID
rand.mat$Gene<-mcopy.number$Gene
mrand.mat<-melt(rand.mat,id.vars=c("Gene","IID"))
dmrand.mat<-dcast(mrand.mat,IID+variable~Gene,value.var="value")
View(dmrand.mat)
dmrand.mat<-dmrand.mat[order(dmrand.mat$variable),]
View(dmrand.mat)
write.table(dmrand.mat,'random_round_haplotypes.txt',sep="\t",col.names=T,row.names=F,quote=F)
write.table(dmrand.mat,'random_round_haplotypes.txt',sep="\t",col.names=T,row.names=F,quote=F)
getwd()
haplos<-levels(dat4$major_haplo)
wn.diffs<-matrix(NA,1000,9)
wn.haplo<-matrix(NA,1000,1)
for(i in 1:1000){
test.haplo<-sample(haplos,1)
wn.haplo[i,1]<-test.haplo
test.dat<-copy.integer[which(copy.integer$major_haplo==test.haplo),]
test.dat<-test.dat[sample(nrow(test.dat),2),]
wn.diffs[i,]<-as.matrix(abs(test.dat[1,c("BPY","CDY","DAZ","HSFY","PRY","RBMY","TSPY","VCY","XKRY")]-test.dat[2,c("BPY","CDY","DAZ","HSFY","PRY","RBMY","TSPY","VCY","XKRY")]))
}
bw.diffs<-matrix(NA,1000,9)
bw.haplo<-matrix(NA,1000,2)
for(i in 1:1000){
test.haplos<-sample(haplos,2)
bw.haplo[i,]<-test.haplos
test.dat1<-copy.integer[which(copy.integer$major_haplo==test.haplos[1]),]
test.dat2<-copy.integer[which(copy.integer$major_haplo==test.haplos[2]),]
test.dat<-rbind(test.dat1[sample(nrow(test.dat1),1),],test.dat2[sample(nrow(test.dat2),1),])
bw.diffs[i,]<-as.matrix(abs(test.dat[1,c("BPY","CDY","DAZ","HSFY","PRY","RBMY","TSPY","VCY","XKRY")]-test.dat[2,c("BPY","CDY","DAZ","HSFY","PRY","RBMY","TSPY","VCY","XKRY")]))
}
colnames(wn.diffs)<-colnames(bw.diffs)<-c("BPY","CDY","DAZ","HSFY","PRY","RBMY","TSPY","VCY","XKRY")
bw.diffs<-as.data.frame(bw.diffs)
wn.diffs<-as.data.frame(wn.diffs)
bw.diffs$comparison<-"Between Haplogroups"
wn.diffs$comparison<-"Within Haplogroups"
comb.diffs<-rbind(bw.diffs,wn.diffs)
mcomb.diffs<-melt(comb.diffs,id.vars=c("comparison"))
colnames(mcomb.diffs)<-c("comparison","Gene","Difference")
fig_6d<-ggplot()+geom_boxplot(data=mcomb.diffs,aes(Gene,Difference,fill=comparison))+theme_bw()+labs(y="Copy number difference b/w two randomly picked haplotypes")
library(ggplot2)
require(reshape2)
require(ggplot2)
fig_6d<-ggplot()+geom_boxplot(data=mcomb.diffs,aes(Gene,Difference,fill=comparison))+theme_bw()+labs(y="Copy number difference b/w two randomly picked haplotypes")
fig_6d
ggsave("Fig_8.pdf",fig_8,height=5,width=7)
fig_8<-ggplot()+geom_boxplot(data=mcomb.diffs,aes(Gene,Difference,fill=comparison))+theme_bw()+labs(y="Copy number difference b/w two randomly picked haplotypes")
ggsave("Fig_8.pdf",fig_8,height=5,width=7)
ggsave("../Figures/Fig_8.pdf",fig_8,height=5,width=7)
